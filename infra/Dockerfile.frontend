FROM node:18-alpine AS base
ARG FRONTEND_INTERNAL_PORT
ENV NEXT_TELEMETRY_DISABLED 1
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
RUN npm install -g pnpm

# Development stage
FROM base AS dev

WORKDIR /app

COPY package*.json pnpm-lock.yaml ./
RUN pnpm i --frozen-lockfile

COPY . .

EXPOSE $FRONTEND_INTERNAL_PORT

ENV PORT $FRONTEND_INTERNAL_PORT
# set hostname to localhost
ENV HOSTNAME "0.0.0.0"

CMD pnpm run dev

# Build stage
FROM base AS build
WORKDIR /app
COPY --chown=node:node package*.json pnpm-lock.yaml ./
COPY --chown=node:node --from=dev /app/node_modules ./node_modules
COPY --chown=node:node . .

RUN pnpm run build
ENV NODE_ENV production
RUN pnpm i --frozen-lockfile --production
USER node

# Production stage
FROM base AS prod
WORKDIR /app

COPY --chown=node:node --from=build /app/node_modules ./node_modules
COPY --chown=node:node --from=build /app/.next ./.next

EXPOSE $FRONTEND_INTERNAL_PORT

ENV PORT $FRONTEND_INTERNAL_PORT
# set hostname to localhost
ENV HOSTNAME "0.0.0.0"

CMD pnpm run start