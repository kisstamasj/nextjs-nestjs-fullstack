version: '3.8'

services:
  # NestJS backend
  backend:
    build:
      context: ../backend
      dockerfile: ../infra/Dockerfile.backend
      target: ${ENV_TYPE}
    ports:
      - ${BACKEND_EXTERNAL_PORT}:${BACKEND_INTERNAL_PORT}
    volumes:
      - ../backend:/app
    env_file:
      - ./.env
    networks:
      - backend_network
    depends_on:
      - database

  # NextJS user client
  # user-client:
  #   build:
  #     context: ../
  #     dockerfile: infra/Dockerfile
  #     target: user-client-${ENV_TYPE}
  #   ports:
  #     - ${USER_CLIENT_EXTERNAL_PORT}:${USER_CLIENT_INTERNAL_PORT}
  #   volumes:
  #     - ../:/app
  #     - /app/apps/user-client/.next
  #     - /app/infra
  #   env_file:
  #     - ./.env
  #   networks:
  #     - backend_network
  #   depends_on:
  #     - backend

  # NextJS admin client
  # admin-client:
  #   build:
  #     context: ../
  #     dockerfile: infra/Dockerfile
  #     target: admin-client-${ENV_TYPE}
  #   ports:
  #     - ${ADMIN_CLIENT_EXTERNAL_PORT}:${ADMIN_CLIENT_INTERNAL_PORT}
  #   volumes:
  #     - ../:/app
  #     - /app/apps/admin-client/.next
  #     - /app/infra
  #   env_file:
  #     - ./.env
  #   networks:
  #     - backend_network
  #   depends_on:
  #     - backend

  # PostgreSQL Database
  database:
    image: postgres
    ports:
      - ${POSTGRES_EXTERNAL_PORT}:${POSTGRES_INTERNAL_PORT}
    env_file:
      - ./.env
    networks:
      - backend_network
    volumes:
      - postgres:/var/lib/postgresql/data

networks:
  backend_network:
    driver: bridge

volumes:
  postgres:
